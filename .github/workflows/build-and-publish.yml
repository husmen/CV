name: Build and Publish CV

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
    paths:
      - 'Houssem_Menhour_CV.yaml'
      - 'classic/**'
      - 'markdown/**'
      - '.github/workflows/**'
  workflow_dispatch:

concurrency:
  group: pages
  cancel-in-progress: true

permissions:
  contents: write      # required for releases
  pages: write         # to deploy to GitHub Pages
  id-token: write      # to authenticate to GitHub Pages

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install RenderCV
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir rendercv[full]

      - name: Install Typst
        uses: typst-community/setup-typst@v3

      - name: Build CV with RenderCV
        run: |
          make render

      - name: Prepare Pages content
        run: |
          make pages

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Upload rendered artifacts for release
        uses: actions/upload-artifact@v4
        with:
          name: rendercv_output
          path: |
            rendercv_output

  # attachment of artifacts moved to the `release` job below; artifacts
  # are uploaded from this job so the `release` job can download them.

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Create a GitHub Release and attach built artifacts. This runs on tag pushes
  # (will create a normal release using the tag name) and on pushes to `main`
  # (will create a prerelease named `main-<run_number>`). It runs after build
  # so artifacts in `rendercv_output` and `public` are available.
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download rendered artifacts from build
        uses: actions/download-artifact@v4
        with:
          name: rendercv_output
          path: downloaded_artifacts

      - name: Create or update GitHub Release and attach artifacts
        uses: softprops/action-gh-release@v2
        with:
          # Use the tag name if this is a tag event, otherwise create a stable name
          tag_name: "${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || format('main-{0}', github.run_number) }}"
          name: "${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || format('Main build #{0}', github.run_number) }}"
          # Mark releases from `main` as prereleases
          prerelease: ${{ github.ref == 'refs/heads/main' }}
          # Attach common output files and the prepared pages directory
          files: |
            downloaded_artifacts/*.pdf
            downloaded_artifacts/*.html
            downloaded_artifacts/*.typ
            downloaded_artifacts/*.md
